.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "EFLASH_FSP2.SRC 1"
.TH EFLASH_FSP2.SRC 1 "2017-06-08" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
eflash.pl \- Using GetOpt::Long, Pod::Usage, IO::Socket, IO::Socket, Net::Ping
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.IP "\fBeflash_fsp2.pl\fR \-\-target <addr> \-\-image <mif file>,<block device> [\s-1OPTIONS\s0]" 4
.IX Item "eflash_fsp2.pl --target <addr> --image <mif file>,<block device> [OPTIONS]"
.PD 0
.IP "\fBeflash.pl\fR \-\-target <addr> [\s-1OPTIONS\s0] <pfifile>" 4
.IX Item "eflash.pl --target <addr> [OPTIONS] <pfifile>"
.IP "\fBeflash.pl\fR \-\-target <addr> [\s-1OPTIONS\s0] [\s-1ACTION\s0]" 4
.IX Item "eflash.pl --target <addr> [OPTIONS] [ACTION]"
.IP "\fBeflash.pl\fR [\-\-help|\-\-man|\-\-version]" 4
.IX Item "eflash.pl [--help|--man|--version]"
.PD
.SH "ARGUMENTS"
.IX Header "ARGUMENTS"
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Print usage information and exit.
.IP "\fB\-\-man\fR" 4
.IX Item "--man"
Show the manual page. This is the same as calling 'perldoc eflash.pl'
from the command line. It provides additional details.
.IP "\-t, \-\-target <addr>" 4
.IX Item "-t, --target <addr>"
controller's host name or \s-1IP\s0 address
.IP "\-\-flash <Image archive>" 4
.IX Item "--flash <Image archive>"
The flash image archive file to use (.flash).
.IP "\-\-flashsection <Image name>" 4
.IX Item "--flashsection <Image name>"
The name of an existing image on disk (.mif) or the
name of the image to extract from the flash image archive
specified with the \-\-flash option.
Using this flag disables the \-\-image option automatically.
.IP "\-\-block\-device <default /dev/mmcblk0p1>" 4
.IX Item "--block-device <default /dev/mmcblk0p1>"
The name of the block device corresponding to the device to
be flashed.  For \s-1NOR\s0 devices, use \s-1NOR\s0 or \s-1NOR_FORCE. \s0 Using
\&\s-1NOR\s0 preserves existing configuration information stored in
the \s-1NOR\s0 device.  \s-1NOR_FORCE\s0 does \s-1NOT\s0 preserve existing
configuration information.  For \s-1NAND\s0 devices, the device
name is the Linux pathname to the block device to flash.
For most \s-1FSP2\s0 systems, this is /dev/mmcblk0.
.Sp
Some examples:
\&\-\-block\-device=NOR
\&\-\-block\-device=NOR_FORCE
\&\-\-block\-device=/dev/mmcblk0
.IP "\-\-maint_mode" 4
.IX Item "--maint_mode"
Using this option leaves the target \s-1FSP\s0 in maintenance mode.
.Sp
Example
eflash_fsp2.pl \-\-flashsection=myNor.mif \-\-block\-device=NOR \-\-target 192.168.1.20 \-\-target\-iface=eth0 \-\-maint_mode
.IP "\-\-image[1..12]=<image name>,<block device>" 4
.IX Item "--image[1..12]=<image name>,<block device>"
This allows multiple images to be flashed.
<image name> is the same as for the \-\-flashsection option.
<block device> is the same as for the \-\-block\-device option.
If \-\-flash <Image archive> is specified, then any image names specified will
be extracted from the image archive if they exist in the image archive.  If a
specified image is not found in the image archive, then eflash will assume the
image name is a Linux file pathname and look for the image on disk.
.Sp
Example
eflash_fsp2.pl \-\-image1=myNor.mif,NOR \-\-image2=myNand,/dev/mmcblk0 \-\-target 192.168.1.20 \-\-target\-iface=eth0
eflash_fsp2.pl \-\-flash myImageArchive.flash \-\-image1=./myNorImageOnDisk.mif,NOR \-\-image2=myNandImageFromArchive,/dev/mmcblk0 \-\-target 192.168.1.20 \-\-target\-iface=eth0
.IP "<pfifile>" 4
.IX Item "<pfifile>"
Obsolete.
.IP "\-v, \-\-verbose" 4
.IX Item "-v, --verbose"
Enable the output of additional program status messages.
.IP "\-d, \-\-debug" 4
.IX Item "-d, --debug"
Enable debug output.
.IP "\-\-no\-debug" 4
.IX Item "--no-debug"
Turn off debug output.
.IP "\-\-dialog" 4
.IX Item "--dialog"
Obsolete (see debug).
.IP "\-\-cmdretry <\s-1COUNT\s0>" 4
.IX Item "--cmdretry <COUNT>"
Specify the number of retries for each controller command. In case
that a controller command fails it is retried \s-1COUNT\s0 times.
Default is a count of three.
.IP "\-\-no\-retry" 4
.IX Item "--no-retry"
Do not retry a controller command if it fails.
This is the same as setting \-\-cmdretry 0.
.IP "\-\-showscript" 4
.IX Item "--showscript"
Shows the u\-boot script used to modify the kernel command line
when booting the target \s-1FSP\s0 into maintenance mode.
.IP "\-\-nowarn" 4
.IX Item "--nowarn"
.PD 0
.IP "\-\-prompt" 4
.IX Item "--prompt"
.PD
when to prompt the user: \f(CW\*(C`\-\-nowarn\*(C'\fR aborts at warnings instead of
prompting; \f(CW\*(C`\-\-prompt\*(C'\fR prompts before resetting target
.ie n .IP "\-\-pdd\-update=""keep""|""merge""|""overwrite""" 4
.el .IP "\-\-pdd\-update=\f(CWkeep\fR|\f(CWmerge\fR|\f(CWoverwrite\fR" 4
.IX Item "--pdd-update=keep|merge|overwrite"
.PD 0
.IP "\-\-side <num>" 4
.IX Item "--side <num>"
.IP "\-\-partial" 4
.IX Item "--partial"
.PD
Obsolete.
.IP "\-C, \-\-compare" 4
.IX Item "-C, --compare"
Compare image file with flash contents instead of flashing
.IP "\-\-target\-iface <name>" 4
.IX Item "--target-iface <name>"
Ethernet interface to use in maintenance mode
.IP "\-\-uboot\-vmlinux <file>" 4
.IX Item "--uboot-vmlinux <file>"
.PD 0
.IP "\-\-uboot\-initrd <file>" 4
.IX Item "--uboot-initrd <file>"
.PD
Use <file> instead of attached binary for maintenance image
.SS "\s-1ACTIONS\s0"
.IX Subsection "ACTIONS"
.IP "\-M, \-\-mode" 4
.IX Item "-M, --mode"
Determine the target's mode
.IP "\-R, \-\-reboot" 4
.IX Item "-R, --reboot"
.PD 0
.IP "\-T, \-\-toolreset" 4
.IX Item "-T, --toolreset"
.PD
Signal the target to reboot, or to initiate a \*(L"toolreset\*(R"
.IP "\fB\-\-noflash\fR" 4
.IX Item "--noflash"
Do not flash
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBeflash.pl\fR, also known as the \*(L"Flashing via Ethernet Client\*(R", can be
used for re-programming an \s-1FSP\-2\s0 controller's flash with a given image
file.  The target controller must be running, and an \f(CW\*(C`eflashd\*(C'\fR daemon
must be active on it (via xinetd).  By default \f(CW\*(C`eflashd\*(C'\fR will listen
on \s-1TCP\s0 port 31337.  \fBeflash.pl\fR connects to that port and reboots the
target into a \*(L"maintenance mode\*(R" before flashing.
.SH "OPTION DETAILS"
.IX Header "OPTION DETAILS"
.IP "\fB\-\-compare\fR" 4
.IX Item "--compare"
Instead of flashing, compare the given image file against the target's
flash content and then exit. \fB\s-1NOT IMPLEMENTED\s0\fR
.IP "\fB\-\-complete\fR" 4
.IX Item "--complete"
Treat the image file as a complete flash image, i.e., erase all volumes
not referenced in the image file.  This is the default.  See also
\&\-\-partial.  This option is obsolete.
.IP "\fB\-\-debug\fR" 4
.IX Item "--debug"
Produce a high level of output describing what eflash is doing
(supercedes \-\-verbose).
.IP "\fB\-\-dialog\fR" 4
.IX Item "--dialog"
Print all communication sent over the network.  Commands sent from the
client will be preceded by \*(L">> \*(R" and all responses from the target
will be preceded by \*(L"<< \*(R".
.IP "\fB\-\-force\fR" 4
.IX Item "--force"
Continue to flash a system even if it is already in maintenance
mode.  Normally, if eflash finds that the target system is already
in maintenance mode it will refuse to flash as this is not the
normal case.
.IP "\fB\-\-mode\fR" 4
.IX Item "--mode"
Instead of flashing, connect to the target to determine whether or not
it is in maintenance mode. Eflash will print a statement that the
target is in \*(L"normal\*(R" (i.e. runtime) mode or in \*(L"maintenance\*(R"
(i.e. ready-to-flash) mode and then exit.
.IP "\fB\-\-noflash\fR" 4
.IX Item "--noflash"
Execute like usual up to where the image file is to be streamed to the
target, but skip this step, such that no flashing occurs.  The program
flow will pick up right after a response from the target would have
been received.
.IP "\fB\-\-nowarn\fR" 4
.IX Item "--nowarn"
Normally, when eflash encounters a warning from the target, it will
print the warning message and then prompt the user if it should
continue.  When \-\-nowarn is flagged and eflash client encounters a
warning it will print the warning, but then exit.
.IP "\fB\-\-partial\fR" 4
.IX Item "--partial"
Treat the image file as a partial image, i.e., leave volumes not
referenced in the image file untouched.  This can be used, e.g., to
update the kernel only, or the boot code only, etc.  See also
\&\-\-complete.  This option is obsolete.
.IP "\fB<pfifile>\fR" 4
.IX Item "<pfifile>"
Specifies the \s-1PFI\s0 image to use for flashing onto the target.
This item is obsolete.
.IP "\fB\-\-pdd\-update\fR <mode>" 4
.IX Item "--pdd-update <mode>"
.RS 4
.PD 0
.IP "\fBkeep\fR" 4
.IX Item "keep"
.PD
Keep the current \s-1PDD\s0 settings on the target (default).
.IP "\fBmerge\fR" 4
.IX Item "merge"
Merge the \s-1PDD\s0 from the incoming image with the \s-1PDD\s0 from the target.
Refer the \s-1PDD\s0 documentation for more details. \fB\s-1NOT IMPLEMENTED\s0\fR
.IP "\fBoverwrite\fR" 4
.IX Item "overwrite"
Replace the old \s-1PDD\s0 with the incoming \s-1PDD.\s0
.RE
.RS 4
.RE
.IP "\fB\-\-port\fR <port>" 4
.IX Item "--port <port>"
Specifies the remote port to connect to the target on.
.IP "\fB\-\-prompt\fR" 4
.IX Item "--prompt"
When flagged, eflash client will pause and wait for a go-ahead from the user
before signaling the target to reboot/reset itself.
.IP "\fB\-\-raw\-flash\fR <dev>" 4
.IX Item "--raw-flash <dev>"
Only when flagged, eflash client will flash the raw volumes of the image file.
The <dev> device node specified should be found in /dev/mtdblock and should
be the node referencing the complete range of the memory device with read
and write access.  This option is obsolete.
.IP "\fB\-\-reboot\fR" 4
.IX Item "--reboot"
Instead of flashing, send a command to the target to reboot itself and
then exit.
.IP "\fB\-\-showscript\fR" 4
.IX Item "--showscript"
Print the generated maintenance boot script before streaming the
maintenance image to the target.
.IP "\fB\-\-side\fR <num>" 4
.IX Item "--side <num>"
Only flash the side specified by <num>.  This affects \s-1UBI\s0 volumes with
redundant copies.  E.g., \f(CW\*(C`\-\-side 0\*(C'\fR only updates the first copy for
each redundant pair of volumes.  Currently not supported.
.IP "\fB\-\-target\fR <addr>" 4
.IX Item "--target <addr>"
Specifies the name or address of the target \s-1FSP\s0 to connect to.
.IP "\fB\-\-target\-iface\fR <name>" 4
.IX Item "--target-iface <name>"
Use the specified network interface when rebooting the controller into
maintenance mode. This can be needed if eflash is unable to reconnect
to the controller after streaming the maintenance image, or if the
controller uses a known \s-1VLAN\s0 configuration.  <name> should be formed
ethA.B where A is 0 or 1 and B is the \s-1VLAN ID.\s0
.Sp
Example: \-\-target\-iface eth1.30
.IP "\fB\-\-toolreset\fR" 4
.IX Item "--toolreset"
Instead of flashing, send a command to the target to perform a
\&\*(L"toolreset\*(R" and then exit.
.IP "\fB\-\-uboot\-initrd\fR <file>" 4
.IX Item "--uboot-initrd <file>"
This item is obsolete.
.IP "\fB\-\-uboot\-vmlinux\fR <file>" 4
.IX Item "--uboot-vmlinux <file>"
This item is obsolete.
.IP "\fB\-\-verbose\fR" 4
.IX Item "--verbose"
Produce output to describe what eflash is doing.
.IP "\fB\-\-verify\fR" 4
.IX Item "--verify"
Compare the image file against the target's flash contents (similar to
\&\-\-compare) after flashing.  \fB\s-1NOT IMPLEMENTED\s0\fR
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
Just print a version string and exit.
.SH "USAGE EXAMPLES"
.IX Header "USAGE EXAMPLES"
.IP "Flash a controller at 192.168.1.20 given my_image.flash:" 4
.IX Item "Flash a controller at 192.168.1.20 given my_image.flash:"
\&./eflash.pl \-\-flash my_image.flash \-\-image my_nor,NOR \-\-image my_nand,/dev/mmcblk0 \-\-target 192.168.1.20
\&./eflash.pl \-\-flash my_image.flash \-\-flashsection=my_nor \-\-block\-device=NOR \-\-target 192.168.1.20
\&./eflash.pl \-\-flash my_image.flash \-\-flashsection=my_nand \-\-block\-device=/dev/mmcblk0 \-\-target 192.168.1.20
.IP "Same, but provide a little information about what's going on:" 4
.IX Item "Same, but provide a little information about what's going on:"
\&./eflash.pl \-\-flash my_image.flash \-\-image my_nor,NOR \-\-image my_nand,/dev/mmcblk0 \-\-target 192.168.1.20 \-\-verbose
\&./eflash.pl \-\-flash my_image.flash \-\-flashsection=my_nor \-\-block\-device=NOR \-\-target 192.168.1.20 \-\-verbose
.IP "Detect the controller's mode:" 4
.IX Item "Detect the controller's mode:"
\&./eflash.pl \-t 192.168.1.20 \-M
.IP "Flash the system even if it's already in maintenance mode:" 4
.IX Item "Flash the system even if it's already in maintenance mode:"
\&./eflash.pl \-\-flash my_image.flash \-\-image my_nor,NOR \-\-image my_nand,/dev/mmcblk0 \-\-target 192.168.1.20 \-\-force
\&./eflash.pl \-\-flash my_image.flash \-\-flashsection=my_nor \-\-block\-device=NOR \-\-target 192.168.1.20 \-\-force
.SH "RETURN VALUES AND ERROR RECOVERY"
.IX Header "RETURN VALUES AND ERROR RECOVERY"
This tool is complex. Besides its own return values it has to keep track of
the return values from the controller. In general, all return values != 0 are
errors or warnings. Besides a numeric value eflash will print an error
message to stderr.
.PP
If the remote flashing operation fails, the client tries to reconnect to the
controller in order to collect debug data about the failed update process.
The data is appended to the local logfile.
.PP
Until the maintenance system is rebooted there is still a chance to resolve
conflicts by using the \-\-force option which can flash directly a system
in maintenance mode.
.PP
The following two sections list the return codes from the controller.
.SS "Errors"
.IX Subsection "Errors"
.IP "\s-1BOOTENV_ECRC      1\s0" 4
.IX Item "BOOTENV_ECRC 1"
Given bootenv section has no valid \s-1CRC.\s0
.IP "\s-1BOOTENV_EFMT      2\s0" 4
.IX Item "BOOTENV_EFMT 2"
Given bootenv section has an invalid format.
.IP "\s-1BOOTENV_EBADENTRY 3\s0" 4
.IX Item "BOOTENV_EBADENTRY 3"
Bad entry in the bootenv section.
.IP "\s-1BOOTENV_EINVAL    4\s0" 4
.IX Item "BOOTENV_EINVAL 4"
Invalid bootenv definition.
.IP "\s-1BOOTENV_ENOPDD    5\s0" 4
.IX Item "BOOTENV_ENOPDD 5"
Given bootenv section has no \s-1PDD\s0 definition string (pdd=...).
.IP "\s-1BOOTENV_EPDDINVAL 6\s0" 4
.IX Item "BOOTENV_EPDDINVAL 6"
Given bootenv section has an invalid \s-1PDD\s0 definition.
.IP "\s-1BOOTENV_ENOTIMPL  7\s0" 4
.IX Item "BOOTENV_ENOTIMPL 7"
Functionality not implemented.
.IP "\s-1BOOTENV_ECOPY     8\s0" 4
.IX Item "BOOTENV_ECOPY 8"
Bootenv memory copy error.
.SS "Warnings"
.IX Subsection "Warnings"
.IP "\s-1BOOTENV_W         1\s0" 4
.IX Item "BOOTENV_W 1"
A warning which is handled internally as an error
but can be recovered. Check ffs's rc, too.
.IP "\s-1BOOTENV_WPDD_STRING_DIFFERS       2\s0" 4
.IX Item "BOOTENV_WPDD_STRING_DIFFERS 2"
The \s-1PDD\s0 strings of old and new \s-1PDD\s0 differ and can cause update problems,
because new \s-1PDD\s0 values are removed from the bootenv section completely.
.SH "ATTACHMENTS"
.IX Header "ATTACHMENTS"
At the end of the script are two binary images to be used for the creation
of the maintenance system. The format is as follows:
.ie n .IP """begin_bin_attach""" 4
.el .IP "``begin_bin_attach''" 4
.IX Item "begin_bin_attach"
.PD 0
.ie n .IP "$name1 $size1 $descriptor1" 4
.el .IP "\f(CW$name1\fR \f(CW$size1\fR \f(CW$descriptor1\fR" 4
.IX Item "$name1 $size1 $descriptor1"
.IP "<lines of binary data>" 4
.IX Item "<lines of binary data>"
.ie n .IP "$name2 $size2 $descriptor2" 4
.el .IP "\f(CW$name2\fR \f(CW$size2\fR \f(CW$descriptor2\fR" 4
.IX Item "$name2 $size2 $descriptor2"
.IP "<lines of binary data>" 4
.IX Item "<lines of binary data>"
.ie n .IP """end_bin_attach""" 4
.el .IP "``end_bin_attach''" 4
.IX Item "end_bin_attach"
.PD
.PP
Note that the lines in quotes must be literal and the only things on those
lines. The script parses for /^begin_bin_attach$/, etc., which demands that
there be no whitespace around the text. This tight check helps insure that the
attachments are intentional.
.PP
The \f(CW$nameX\fR \f(CW$sizeX\fR and \f(CW$descriptorX\fR variables appear on the descriptor line
immediately after \*(L"begin...\*(R" and immediately after the lines of the first
binary data. \f(CW$nameX\fR may contain alphanumeric characters as well as
underscores\*(--anything but a space is theoretically okay, but sticking to
the above is recommended. \f(CW$sizeX\fR is the number of bytes that follow the
descriptor line that make up the binary image. \f(CW$descriptorX\fR is not required
and will be considered to be anything after the space after \f(CW$sizeX\fR to the end
of the line, i.e. can contain whitespace. This could be used for a short
description text or version number, etc.
.SH "RESOURCES"
.IX Header "RESOURCES"
eflash.pl connects to the eflashd xinted daemon. Be sure that your remote
target is well configured.
.SH "BUGS"
.IX Header "BUGS"
Check with and report via Bugzilla (\s-1FSP\s0 Family) at
https://bugzilla.linux.ibm.com/
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "\fIeflashd\fR\|(1)" 4
.IX Item "eflashd"
The flashing via ethernet xinetd daemon.
.IP "\fIpflash\fR\|(1)" 4
.IX Item "pflash"
The RiscWatch flasher.
.IP "\fIpfiflash\fR\|(1)" 4
.IX Item "pfiflash"
The mtd flashing utility.
.SH "AUTHORS"
.IX Header "AUTHORS"
Oliver Lohmann
.PP
Drake Dowsett
.PP
Frank Haverkamp  (haverkam@de.ibm.com)
.PP
Andreas Loeffler (al@linux.vnet.ibm.com)
.SH "CONTACT"
.IX Header "CONTACT"
Andreas Loeffler (al@linux.vnet.ibm.com)
.PP
Andreas Arnez    (arnez@de.ibm.com)

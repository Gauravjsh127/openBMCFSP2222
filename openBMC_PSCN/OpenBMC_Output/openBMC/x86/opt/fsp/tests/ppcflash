#!/bin/bash
# ===================================================================
#   Copyright (c) International Business Machines Corp., 2013
#
#   This program is free software;  you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY;  without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
#   the GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program;  if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
#     File: ppcflash.sh is a testcase for code upload via dbgx
#   Author: Shaun wetzstein <shaun@us.ibm.com>
#     Date: 03/06/13
# ===================================================================

set -o errexit
set -o nounset

PWD=`pwd`
SH_DIR=`dirname $0`
export PATH=$PATH:$PWD/$SH_DIR:$PWD/$SH_DIR/../usr/bin

RW_PROBE="--host 192.168.1.100"
RW_PORT=""
T_VERB="0"
VERBOSE="0"
OP="error"
DBGX="dbgx"
SLEEP=sleep
CAT=cat
ZCAT=zcat
BASE64=base64

FAIL=1
PASS=0

KB="1024"
MB=$(($KB*1024))

L1=32
L2=128

function expect()
{
	local expect=${1}
	shift
	local command=${*}
	eval $command
	local actual=${?}

	if [[ ${expect} -eq ${actual} ]]; then
		echo "[PASSED] rc: '${command}' ===> expect=${expect}, actual=${actual}" >&2
	else
		echo "[FAILED] rc: '${command}' ===> expect=${expect}, actual=${actual}" >&2
		exit 1
	fi
}

function pass()
{
	expect ${PASS} ${*}
}

function fail()
{
	expect ${FAIL} ${*}
}

function reset_probe()
{
	pass ${DBGX} --probe reset
}

function reset_chip()
{
	# all-in-one command to duplicate the following calls
	pass ${DBGX} --init

	pass ${DBGX} --stop
	pass ${DBGX} --asic cmu.tmr0=0x01004E20	# config cmu.TMR0[T0]
	pass ${DBGX} --halt on
	pass ${DBGX} --reset sys		# DBCR[SYS]
	pass ${DBGX} --stop
	pass ${DBGX} --asic cmu.bwtc=1		# disable BWT
	pass ${DBGX} --halt off
	pass ${DBGX} --stop

	x=`${DBGX} --asic spr.iar | ${CAT}`
	while [[ "$x" != "fffffffc" ]]
	do
		${SLEEP} 0.2
		${DBGX} --status
		x=`${DBGX} --asic spr.iar | ${CAT}`
		echo "IAR = $x"
	done
}

function init_sprs()
{
	pass ${DBGX} --asic spr.iar=0
}

function init_tlb()
{
	pass ${DBGX} --tlb <<__EOF__
00-00: 00000000 00000000 00000000 80000000
00-01: 00000000 00000000 00000000 a0000000
00-02: 00000000 00000000 00000000 c0000000
00-03: 00000000 00000000 00000000 e0000000
01-00: 00001000 00001000 00000000 80000000
01-01: 00001000 00001000 00000000 a0000000
01-02: 00001000 00001000 00000000 c0000000
01-03: 00001000 00001000 00000000 e0000000
02-00: 00002000 00002000 00000000 80000000
02-01: 00002000 00002000 00000000 a0000000
02-02: 00002000 00002000 00000000 c0000000
02-03: 00002000 00002000 00000000 e0000000
03-00: 00003000 00003000 00000000 80000000
03-01: 00003000 00003000 00000000 a0000000
03-02: 00003000 00003000 00000000 c0000000
03-03: 00003000 00003000 00000000 e0000000
04-00: 00004000 00004000 00000000 80000000
04-01: 00004000 00004000 00000000 a0000000
04-02: 00004000 00004000 00000000 c0000000
04-03: 00004000 00004000 00000000 e0000000
05-00: 00005000 00005000 00000000 80000000
05-01: 00005000 00005000 00000000 a0000000
05-02: 00005000 00005000 00000000 c0000000
05-03: 00005000 00005000 00000000 e0000000
06-00: 00006000 00006000 00000000 80000000
06-01: 00006000 00006000 00000000 a0000000
06-02: 00006000 00006000 00000000 c0000000
06-03: 00006000 00006000 00000000 e0000000
07-00: 00007000 00007000 00000000 80000000
07-01: 00007000 00007000 00000000 a0000000
07-02: 00007000 00007000 00000000 c0000000
07-03: 00007000 00007000 00000000 e0000000
08-00: 00008000 00008000 00000000 80000000
08-01: 00008000 00008000 00000000 a0000000
08-02: 00008000 00008000 00000000 c0000000
08-03: 00008000 00008000 00000000 e0000000
09-00: 00009000 00009000 00000000 80000000
09-01: 00009000 00009000 00000000 a0000000
09-02: 00009000 00009000 00000000 c0000000
09-03: 00009000 00009000 00000000 e0000000
0a-00: 0000a000 0000a000 00000000 80000000
0a-01: 0000a000 0000a000 00000000 a0000000
0a-02: 0000a000 0000a000 00000000 c0000000
0a-03: 0000a000 0000a000 00000000 e0000000
0b-00: 0000b000 0000b000 00000000 80000000
0b-01: 0000b000 0000b000 00000000 a0000000
0b-02: 0000b000 0000b000 00000000 c0000000
0b-03: 0000b000 0000b000 00000000 e0000000
0c-00: 0000c000 0000c000 00000000 80000000
0c-01: 0000c000 0000c000 00000000 a0000000
0c-02: 0000c000 0000c000 00000000 c0000000
0c-03: 0000c000 0000c000 00000000 e0000000
0d-00: 0000d000 0000d000 00000000 80000000
0d-01: 0000d000 0000d000 00000000 a0000000
0d-02: 0000d000 0000d000 00000000 c0000000
0d-03: 0000d000 0000d000 00000000 e0000000
0e-00: 0000e000 0000e000 00000000 80000000
0e-01: 0000e000 0000e000 00000000 a0000000
0e-02: 0000e000 0000e000 00000000 c0000000
0e-03: 0000e000 0000e000 00000000 e0000000
0f-00: 0000f000 0000f000 00000000 80000000
0f-01: 0000f000 0000f000 00000000 a0000000
0f-02: 0000f000 0000f000 00000000 c0000000
0f-03: 0000f000 0000f000 00000000 e0000000
10-00: 00010000 00010000 00000000 80000000
10-01: 00010000 00010000 00000000 a0000000
10-02: 00010000 00010000 00000000 c0000000
10-03: 00010000 00010000 00000000 e0000000
11-00: 00011000 00011000 00000000 80000000
11-01: 00011000 00011000 00000000 a0000000
11-02: 00011000 00011000 00000000 c0000000
11-03: 00011000 00011000 00000000 e0000000
12-00: 00012000 00012000 00000000 80000000
12-01: 00012000 00012000 00000000 a0000000
12-02: 00012000 00012000 00000000 c0000000
12-03: 00012000 00012000 00000000 e0000000
13-00: 00013000 00013000 00000000 80000000
13-01: 00013000 00013000 00000000 a0000000
13-02: 00013000 00013000 00000000 c0000000
13-03: 00013000 00013000 00000000 e0000000
14-00: 00014000 00014000 00000000 80000000
14-01: 00014000 00014000 00000000 a0000000
14-02: 00014000 00014000 00000000 c0000000
14-03: 00014000 00014000 00000000 e0000000
15-00: 00015000 00015000 00000000 80000000
15-01: 00015000 00015000 00000000 a0000000
15-02: 00015000 00015000 00000000 c0000000
15-03: 00015000 00015000 00000000 e0000000
16-00: 00016000 00016000 00000000 80000000
16-01: 00016000 00016000 00000000 a0000000
16-02: 00016000 00016000 00000000 c0000000
16-03: 00016000 00016000 00000000 e0000000
17-00: 00017000 00017000 00000000 80000000
17-01: 00017000 00017000 00000000 a0000000
17-02: 00017000 00017000 00000000 c0000000
17-03: 00017000 00017000 00000000 e0000000
18-00: 00018000 00018000 00000000 80000000
18-01: 00018000 00018000 00000000 a0000000
18-02: 00018000 00018000 00000000 c0000000
18-03: 00018000 00018000 00000000 e0000000
19-00: 00019000 00019000 00000000 80000000
19-01: 00019000 00019000 00000000 a0000000
19-02: 00019000 00019000 00000000 c0000000
19-03: 00019000 00019000 00000000 e0000000
1a-00: 0001a000 0001a000 00000000 80000000
1a-01: 0001a000 0001a000 00000000 a0000000
1a-02: 0001a000 0001a000 00000000 c0000000
1a-03: 0001a000 0001a000 00000000 e0000000
1b-00: 0001b000 0001b000 00000000 80000000
1b-01: 0001b000 0001b000 00000000 a0000000
1b-02: 0001b000 0001b000 00000000 c0000000
1b-03: 0001b000 0001b000 00000000 e0000000
1c-00: 0001c000 0001c000 00000000 80000000
1c-01: 0001c000 0001c000 00000000 a0000000
1c-02: 0001c000 0001c000 00000000 c0000000
1c-03: 0001c000 0001c000 00000000 e0000000
1d-00: 0001d000 0001d000 00000000 80000000
1d-01: 0001d000 0001d000 00000000 a0000000
1d-02: 0001d000 0001d000 00000000 c0000000
1d-03: 0001d000 0001d000 00000000 e0000000
1e-00: 0001e000 0001e000 00000000 80000000
1e-01: 0001e000 0001e000 00000000 a0000000
1e-02: 0001e000 0001e000 00000000 c0000000
1e-03: 0001e000 0001e000 00000000 e0000000
1f-00: 0001f000 0001f000 00000000 80000000
1f-01: 0001f000 0001f000 00000000 a0000000
1f-02: 0001f000 0001f000 00000000 c0000000
1f-03: 0001f000 0001f000 00000000 e0000000
20-00: 00020000 00020000 00000000 80000000
20-01: 00020000 00020000 00000000 a0000000
20-02: 00020000 00020000 00000000 c0000000
20-03: 00020000 00020000 00000000 e0000000
21-00: 00021000 00021000 00000000 80000000
21-01: 00021000 00021000 00000000 a0000000
21-02: 00021000 00021000 00000000 c0000000
21-03: 00021000 00021000 00000000 e0000000
22-00: 00022000 00022000 00000000 80000000
22-01: 00022000 00022000 00000000 a0000000
22-02: 00022000 00022000 00000000 c0000000
22-03: 00022000 00022000 00000000 e0000000
23-00: 00023000 00023000 00000000 80000000
23-01: 00023000 00023000 00000000 a0000000
23-02: 00023000 00023000 00000000 c0000000
23-03: 00023000 00023000 00000000 e0000000
24-00: 00024000 00024000 00000000 80000000
24-01: 00024000 00024000 00000000 a0000000
24-02: 00024000 00024000 00000000 c0000000
24-03: 00024000 00024000 00000000 e0000000
25-00: 00025000 00025000 00000000 80000000
25-01: 00025000 00025000 00000000 a0000000
25-02: 00025000 00025000 00000000 c0000000
25-03: 00025000 00025000 00000000 e0000000
26-00: 00026000 00026000 00000000 80000000
26-01: 00026000 00026000 00000000 a0000000
26-02: 00026000 00026000 00000000 c0000000
26-03: 00026000 00026000 00000000 e0000000
27-00: 00027000 00027000 00000000 80000000
27-01: 00027000 00027000 00000000 a0000000
27-02: 00027000 00027000 00000000 c0000000
27-03: 00027000 00027000 00000000 e0000000
28-00: 00028000 00028000 00000000 80000000
28-01: 00028000 00028000 00000000 a0000000
28-02: 00028000 00028000 00000000 c0000000
28-03: 00028000 00028000 00000000 e0000000
29-00: 00029000 00029000 00000000 80000000
29-01: 00029000 00029000 00000000 a0000000
29-02: 00029000 00029000 00000000 c0000000
29-03: 00029000 00029000 00000000 e0000000
2a-00: 0002a000 0002a000 00000000 80000000
2a-01: 0002a000 0002a000 00000000 a0000000
2a-02: 0002a000 0002a000 00000000 c0000000
2a-03: 0002a000 0002a000 00000000 e0000000
2b-00: 0002b000 0002b000 00000000 80000000
2b-01: 0002b000 0002b000 00000000 a0000000
2b-02: 0002b000 0002b000 00000000 c0000000
2b-03: 0002b000 0002b000 00000000 e0000000
2c-00: 0002c000 0002c000 00000000 80000000
2c-01: 0002c000 0002c000 00000000 a0000000
2c-02: 0002c000 0002c000 00000000 c0000000
2c-03: 0002c000 0002c000 00000000 e0000000
2d-00: 0002d000 0002d000 00000000 80000000
2d-01: 0002d000 0002d000 00000000 a0000000
2d-02: 0002d000 0002d000 00000000 c0000000
2d-03: 0002d000 0002d000 00000000 e0000000
2e-00: 0002e000 0002e000 00000000 80000000
2e-01: 0002e000 0002e000 00000000 a0000000
2e-02: 0002e000 0002e000 00000000 c0000000
2e-03: 0002e000 0002e000 00000000 e0000000
2f-00: 0002f000 0002f000 00000000 80000000
2f-01: 0002f000 0002f000 00000000 a0000000
2f-02: 0002f000 0002f000 00000000 c0000000
2f-03: 0002f000 0002f000 00000000 e0000000
30-00: 00030000 00030000 00000000 80000000
30-01: 00030000 00030000 00000000 a0000000
30-02: 00030000 00030000 00000000 c0000000
30-03: 00030000 00030000 00000000 e0000000
31-00: 00031000 00031000 00000000 80000000
31-01: 00031000 00031000 00000000 a0000000
31-02: 00031000 00031000 00000000 c0000000
31-03: 00031000 00031000 00000000 e0000000
32-00: 00032000 00032000 00000000 80000000
32-01: 00032000 00032000 00000000 a0000000
32-02: 00032000 00032000 00000000 c0000000
32-03: 00032000 00032000 00000000 e0000000
33-00: 00033000 00033000 00000000 80000000
33-01: 00033000 00033000 00000000 a0000000
33-02: 00033000 00033000 00000000 c0000000
33-03: 00033000 00033000 00000000 e0000000
34-00: 00034000 00034000 00000000 80000000
34-01: 00034000 00034000 00000000 a0000000
34-02: 00034000 00034000 00000000 c0000000
34-03: 00034000 00034000 00000000 e0000000
35-00: 00035000 00035000 00000000 80000000
35-01: 00035000 00035000 00000000 a0000000
35-02: 00035000 00035000 00000000 c0000000
35-03: 00035000 00035000 00000000 e0000000
36-00: 00036000 00036000 00000000 80000000
36-01: 00036000 00036000 00000000 a0000000
36-02: 00036000 00036000 00000000 c0000000
36-03: 00036000 00036000 00000000 e0000000
37-00: 00037000 00037000 00000000 80000000
37-01: 00037000 00037000 00000000 a0000000
37-02: 00037000 00037000 00000000 c0000000
37-03: 00037000 00037000 00000000 e0000000
38-00: 00038000 00038000 00000000 80000000
38-01: 00038000 00038000 00000000 a0000000
38-02: 00038000 00038000 00000000 c0000000
38-03: 00038000 00038000 00000000 e0000000
39-00: 00039000 00039000 00000000 80000000
39-01: 00039000 00039000 00000000 a0000000
39-02: 00039000 00039000 00000000 c0000000
39-03: 00039000 00039000 00000000 e0000000
3a-00: 0003a000 0003a000 00000000 80000000
3a-01: 0003a000 0003a000 00000000 a0000000
3a-02: 0003a000 0003a000 00000000 c0000000
3a-03: 0003a000 0003a000 00000000 e0000000
3b-00: 0003b000 0003b000 00000000 80000000
3b-01: 0003b000 0003b000 00000000 a0000000
3b-02: 0003b000 0003b000 00000000 c0000000
3b-03: 0003b000 0003b000 00000000 e0000000
3c-00: 0003c000 0003c000 00000000 80000000
3c-01: 0003c000 0003c000 00000000 a0000000
3c-02: 0003c000 0003c000 00000000 c0000000
3c-03: 0003c000 0003c000 00000000 e0000000
3d-00: 0003d000 0003d000 00000000 80000000
3d-01: 0003d000 0003d000 00000000 a0000000
3d-02: 0003d000 0003d000 00000000 c0000000
3d-03: 0003d000 0003d000 00000000 e0000000
3e-00: 0003e000 0003e000 00000000 80000000
3e-01: 0003e000 0003e000 00000000 a0000000
3e-02: 0003e000 0003e000 00000000 c0000000
3e-03: 0003e000 0003e000 00000000 e0000000
3f-00: 0003f000 0003f000 00000000 80000000
3f-01: 0003f000 0003f000 00000000 a0000000
3f-02: 0003f000 0003f000 00000000 c0000000
3f-03: 0003f000 0003f000 00000000 e0000000
40-00: 00040000 00040000 00000000 80000000
40-01: 00040000 00040000 00000000 a0000000
40-02: 00040000 00040000 00000000 c0000000
40-03: 00040000 00040000 00000000 e0000000
41-00: 00041000 00041000 00000000 80000000
41-01: 00041000 00041000 00000000 a0000000
41-02: 00041000 00041000 00000000 c0000000
41-03: 00041000 00041000 00000000 e0000000
42-00: 00042000 00042000 00000000 80000000
42-01: 00042000 00042000 00000000 a0000000
42-02: 00042000 00042000 00000000 c0000000
42-03: 00042000 00042000 00000000 e0000000
43-00: 00043000 00043000 00000000 80000000
43-01: 00043000 00043000 00000000 a0000000
43-02: 00043000 00043000 00000000 c0000000
43-03: 00043000 00043000 00000000 e0000000
44-00: 00044000 00044000 00000000 80000000
44-01: 00044000 00044000 00000000 a0000000
44-02: 00044000 00044000 00000000 c0000000
44-03: 00044000 00044000 00000000 e0000000
45-00: 00045000 00045000 00000000 80000000
45-01: 00045000 00045000 00000000 a0000000
45-02: 00045000 00045000 00000000 c0000000
45-03: 00045000 00045000 00000000 e0000000
46-00: 00046000 00046000 00000000 80000000
46-01: 00046000 00046000 00000000 a0000000
46-02: 00046000 00046000 00000000 c0000000
46-03: 00046000 00046000 00000000 e0000000
47-00: 00047000 00047000 00000000 80000000
47-01: 00047000 00047000 00000000 a0000000
47-02: 00047000 00047000 00000000 c0000000
47-03: 00047000 00047000 00000000 e0000000
48-00: 00048000 00048000 00000000 80000000
48-01: 00048000 00048000 00000000 a0000000
48-02: 00048000 00048000 00000000 c0000000
48-03: 00048000 00048000 00000000 e0000000
49-00: 00049000 00049000 00000000 80000000
49-01: 00049000 00049000 00000000 a0000000
49-02: 00049000 00049000 00000000 c0000000
49-03: 00049000 00049000 00000000 e0000000
4a-00: 0004a000 0004a000 00000000 80000000
4a-01: 0004a000 0004a000 00000000 a0000000
4a-02: 0004a000 0004a000 00000000 c0000000
4a-03: 0004a000 0004a000 00000000 e0000000
4b-00: 0004b000 0004b000 00000000 80000000
4b-01: 0004b000 0004b000 00000000 a0000000
4b-02: 0004b000 0004b000 00000000 c0000000
4b-03: 0004b000 0004b000 00000000 e0000000
4c-00: 0004c000 0004c000 00000000 80000000
4c-01: 0004c000 0004c000 00000000 a0000000
4c-02: 0004c000 0004c000 00000000 c0000000
4c-03: 0004c000 0004c000 00000000 e0000000
4d-00: 0004d000 0004d000 00000000 80000000
4d-01: 0004d000 0004d000 00000000 a0000000
4d-02: 0004d000 0004d000 00000000 c0000000
4d-03: 0004d000 0004d000 00000000 e0000000
4e-00: 0004e000 0004e000 00000000 80000000
4e-01: 0004e000 0004e000 00000000 a0000000
4e-02: 0004e000 0004e000 00000000 c0000000
4e-03: 0004e000 0004e000 00000000 e0000000
4f-00: 0004f000 0004f000 00000000 80000000
4f-01: 0004f000 0004f000 00000000 a0000000
4f-02: 0004f000 0004f000 00000000 c0000000
4f-03: 0004f000 0004f000 00000000 e0000000
50-00: 00050000 00050000 00000000 80000000
50-01: 00050000 00050000 00000000 a0000000
50-02: 00050000 00050000 00000000 c0000000
50-03: 00050000 00050000 00000000 e0000000
51-00: 00051000 00051000 00000000 80000000
51-01: 00051000 00051000 00000000 a0000000
51-02: 00051000 00051000 00000000 c0000000
51-03: 00051000 00051000 00000000 e0000000
52-00: 00052000 00052000 00000000 80000000
52-01: 00052000 00052000 00000000 a0000000
52-02: 00052000 00052000 00000000 c0000000
52-03: 00052000 00052000 00000000 e0000000
53-00: 00053000 00053000 00000000 80000000
53-01: 00053000 00053000 00000000 a0000000
53-02: 00053000 00053000 00000000 c0000000
53-03: 00053000 00053000 00000000 e0000000
54-00: 00054000 00054000 00000000 80000000
54-01: 00054000 00054000 00000000 a0000000
54-02: 00054000 00054000 00000000 c0000000
54-03: 00054000 00054000 00000000 e0000000
55-00: 00055000 00055000 00000000 80000000
55-01: 00055000 00055000 00000000 a0000000
55-02: 00055000 00055000 00000000 c0000000
55-03: 00055000 00055000 00000000 e0000000
56-00: 00056000 00056000 00000000 80000000
56-01: 00056000 00056000 00000000 a0000000
56-02: 00056000 00056000 00000000 c0000000
56-03: 00056000 00056000 00000000 e0000000
57-00: 00057000 00057000 00000000 80000000
57-01: 00057000 00057000 00000000 a0000000
57-02: 00057000 00057000 00000000 c0000000
57-03: 00057000 00057000 00000000 e0000000
58-00: 00058000 00058000 00000000 80000000
58-01: 00058000 00058000 00000000 a0000000
58-02: 00058000 00058000 00000000 c0000000
58-03: 00058000 00058000 00000000 e0000000
59-00: 00059000 00059000 00000000 80000000
59-01: 00059000 00059000 00000000 a0000000
59-02: 00059000 00059000 00000000 c0000000
59-03: 00059000 00059000 00000000 e0000000
5a-00: 0005a000 0005a000 00000000 80000000
5a-01: 0005a000 0005a000 00000000 a0000000
5a-02: 0005a000 0005a000 00000000 c0000000
5a-03: 0005a000 0005a000 00000000 e0000000
5b-00: 0005b000 0005b000 00000000 80000000
5b-01: 0005b000 0005b000 00000000 a0000000
5b-02: 0005b000 0005b000 00000000 c0000000
5b-03: 0005b000 0005b000 00000000 e0000000
5c-00: 0005c000 0005c000 00000000 80000000
5c-01: 0005c000 0005c000 00000000 a0000000
5c-02: 0005c000 0005c000 00000000 c0000000
5c-03: 0005c000 0005c000 00000000 e0000000
5d-00: 0005d000 0005d000 00000000 80000000
5d-01: 0005d000 0005d000 00000000 a0000000
5d-02: 0005d000 0005d000 00000000 c0000000
5d-03: 0005d000 0005d000 00000000 e0000000
5e-00: 0005e000 0005e000 00000000 80000000
5e-01: 0005e000 0005e000 00000000 a0000000
5e-02: 0005e000 0005e000 00000000 c0000000
5e-03: 0005e000 0005e000 00000000 e0000000
5f-00: 0005f000 0005f000 00000000 80000000
5f-01: 0005f000 0005f000 00000000 a0000000
5f-02: 0005f000 0005f000 00000000 c0000000
5f-03: 0005f000 0005f000 00000000 e0000000
60-00: 00060000 00060000 00000000 80000000
60-01: 00060000 00060000 00000000 a0000000
60-02: 00060000 00060000 00000000 c0000000
60-03: 00060000 00060000 00000000 e0000000
61-00: 00061000 00061000 00000000 80000000
61-01: 00061000 00061000 00000000 a0000000
61-02: 00061000 00061000 00000000 c0000000
61-03: 00061000 00061000 00000000 e0000000
62-00: 00062000 00062000 00000000 80000000
62-01: 00062000 00062000 00000000 a0000000
62-02: 00062000 00062000 00000000 c0000000
62-03: 00062000 00062000 00000000 e0000000
63-00: 00063000 00063000 00000000 80000000
63-01: 00063000 00063000 00000000 a0000000
63-02: 00063000 00063000 00000000 c0000000
63-03: 00063000 00063000 00000000 e0000000
64-00: 00064000 00064000 00000000 80000000
64-01: 00064000 00064000 00000000 a0000000
64-02: 00064000 00064000 00000000 c0000000
64-03: 00064000 00064000 00000000 e0000000
65-00: 00065000 00065000 00000000 80000000
65-01: 00065000 00065000 00000000 a0000000
65-02: 00065000 00065000 00000000 c0000000
65-03: 00065000 00065000 00000000 e0000000
66-00: 00066000 00066000 00000000 80000000
66-01: 00066000 00066000 00000000 a0000000
66-02: 00066000 00066000 00000000 c0000000
66-03: 00066000 00066000 00000000 e0000000
67-00: 00067000 00067000 00000000 80000000
67-01: 00067000 00067000 00000000 a0000000
67-02: 00067000 00067000 00000000 c0000000
67-03: 00067000 00067000 00000000 e0000000
68-00: 00068000 00068000 00000000 80000000
68-01: 00068000 00068000 00000000 a0000000
68-02: 00068000 00068000 00000000 c0000000
68-03: 00068000 00068000 00000000 e0000000
69-00: 00069000 00069000 00000000 80000000
69-01: 00069000 00069000 00000000 a0000000
69-02: 00069000 00069000 00000000 c0000000
69-03: 00069000 00069000 00000000 e0000000
6a-00: 0006a000 0006a000 00000000 80000000
6a-01: 0006a000 0006a000 00000000 a0000000
6a-02: 0006a000 0006a000 00000000 c0000000
6a-03: 0006a000 0006a000 00000000 e0000000
6b-00: 0006b000 0006b000 00000000 80000000
6b-01: 0006b000 0006b000 00000000 a0000000
6b-02: 0006b000 0006b000 00000000 c0000000
6b-03: 0006b000 0006b000 00000000 e0000000
6c-00: 0006c000 0006c000 00000000 80000000
6c-01: 0006c000 0006c000 00000000 a0000000
6c-02: 0006c000 0006c000 00000000 c0000000
6c-03: 0006c000 0006c000 00000000 e0000000
6d-00: 0006d000 0006d000 00000000 80000000
6d-01: 0006d000 0006d000 00000000 a0000000
6d-02: 0006d000 0006d000 00000000 c0000000
6d-03: 0006d000 0006d000 00000000 e0000000
6e-00: 0006e000 0006e000 00000000 80000000
6e-01: 0006e000 0006e000 00000000 a0000000
6e-02: 0006e000 0006e000 00000000 c0000000
6e-03: 0006e000 0006e000 00000000 e0000000
6f-00: 0006f000 0006f000 00000000 80000000
6f-01: 0006f000 0006f000 00000000 a0000000
6f-02: 0006f000 0006f000 00000000 c0000000
6f-03: 0006f000 0006f000 00000000 e0000000
70-00: 00070000 00070000 00000000 80000000
70-01: 00070000 00070000 00000000 a0000000
70-02: 00070000 00070000 00000000 c0000000
70-03: 00070000 00070000 00000000 e0000000
71-00: 00071000 00071000 00000000 80000000
71-01: 00071000 00071000 00000000 a0000000
71-02: 00071000 00071000 00000000 c0000000
71-03: 00071000 00071000 00000000 e0000000
72-00: 00072000 00072000 00000000 80000000
72-01: 00072000 00072000 00000000 a0000000
72-02: 00072000 00072000 00000000 c0000000
72-03: 00072000 00072000 00000000 e0000000
73-00: 00073000 00073000 00000000 80000000
73-01: 00073000 00073000 00000000 a0000000
73-02: 00073000 00073000 00000000 c0000000
73-03: 00073000 00073000 00000000 e0000000
74-00: 00074000 00074000 00000000 80000000
74-01: 00074000 00074000 00000000 a0000000
74-02: 00074000 00074000 00000000 c0000000
74-03: 00074000 00074000 00000000 e0000000
75-00: 00075000 00075000 00000000 80000000
75-01: 00075000 00075000 00000000 a0000000
75-02: 00075000 00075000 00000000 c0000000
75-03: 00075000 00075000 00000000 e0000000
76-00: 00076000 00076000 00000000 80000000
76-01: 00076000 00076000 00000000 a0000000
76-02: 00076000 00076000 00000000 c0000000
76-03: 00076000 00076000 00000000 e0000000
77-00: 00077000 00077000 00000000 80000000
77-01: 00077000 00077000 00000000 a0000000
77-02: 00077000 00077000 00000000 c0000000
77-03: 00077000 00077000 00000000 e0000000
78-00: 00078000 00078000 00000000 80000000
78-01: 00078000 00078000 00000000 a0000000
78-02: 00078000 00078000 00000000 c0000000
78-03: 00078000 00078000 00000000 e0000000
79-00: 00079000 00079000 00000000 80000000
79-01: 00079000 00079000 00000000 a0000000
79-02: 00079000 00079000 00000000 c0000000
79-03: 00079000 00079000 00000000 e0000000
7a-00: 0007a000 0007a000 00000000 80000000
7a-01: 0007a000 0007a000 00000000 a0000000
7a-02: 0007a000 0007a000 00000000 c0000000
7a-03: 0007a000 0007a000 00000000 e0000000
7b-00: 0007b000 0007b000 00000000 80000000
7b-01: 0007b000 0007b000 00000000 a0000000
7b-02: 0007b000 0007b000 00000000 c0000000
7b-03: 0007b000 0007b000 00000000 e0000000
7c-00: 0007c000 0007c000 00000000 80000000
7c-01: 0007c000 0007c000 00000000 a0000000
7c-02: 0007c000 0007c000 00000000 c0000000
7c-03: 0007c000 0007c000 00000000 e0000000
7d-00: 0007d000 0007d000 00000000 80000000
7d-01: 0007d000 0007d000 00000000 a0000000
7d-02: 0007d000 0007d000 00000000 c0000000
7d-03: 0007d000 0007d000 00000000 e0000000
7e-00: 0007e000 0007e000 00000000 80000000
7e-01: 0007e000 0007e000 00000000 a0000000
7e-02: 0007e000 0007e000 00000000 c0000000
7e-03: 0007e000 0007e000 00000000 e0000000
7f-00: 0007f000 0007f000 00000000 80000000
7f-01: 0007f000 0007f000 00000000 a0000000
7f-02: 0007f000 0007f000 00000000 c0000000
7f-03: 0007f000 0007f000 00000000 e0000000
80-00: 00080000 00080000 00000000 80000000
80-01: 00080000 00080000 00000000 a0000000
80-02: 00080000 00080000 00000000 c0000000
80-03: 00080000 00080000 00000000 e0000000
81-00: 00081000 00081000 00000000 80000000
81-01: 00081000 00081000 00000000 a0000000
81-02: 00081000 00081000 00000000 c0000000
81-03: 00081000 00081000 00000000 e0000000
82-00: 00082000 00082000 00000000 80000000
82-01: 00082000 00082000 00000000 a0000000
82-02: 00082000 00082000 00000000 c0000000
82-03: 00082000 00082000 00000000 e0000000
83-00: 00083000 00083000 00000000 80000000
83-01: 00083000 00083000 00000000 a0000000
83-02: 00083000 00083000 00000000 c0000000
83-03: 00083000 00083000 00000000 e0000000
84-00: 00084000 00084000 00000000 80000000
84-01: 00084000 00084000 00000000 a0000000
84-02: 00084000 00084000 00000000 c0000000
84-03: 00084000 00084000 00000000 e0000000
85-00: 00085000 00085000 00000000 80000000
85-01: 00085000 00085000 00000000 a0000000
85-02: 00085000 00085000 00000000 c0000000
85-03: 00085000 00085000 00000000 e0000000
86-00: 00086000 00086000 00000000 80000000
86-01: 00086000 00086000 00000000 a0000000
86-02: 00086000 00086000 00000000 c0000000
86-03: 00086000 00086000 00000000 e0000000
87-00: 00087000 00087000 00000000 80000000
87-01: 00087000 00087000 00000000 a0000000
87-02: 00087000 00087000 00000000 c0000000
87-03: 00087000 00087000 00000000 e0000000
88-00: 00088000 00088000 00000000 80000000
88-01: 00088000 00088000 00000000 a0000000
88-02: 00088000 00088000 00000000 c0000000
88-03: 00088000 00088000 00000000 e0000000
89-00: 00089000 00089000 00000000 80000000
89-01: 00089000 00089000 00000000 a0000000
89-02: 00089000 00089000 00000000 c0000000
89-03: 00089000 00089000 00000000 e0000000
8a-00: 0008a000 0008a000 00000000 80000000
8a-01: 0008a000 0008a000 00000000 a0000000
8a-02: 0008a000 0008a000 00000000 c0000000
8a-03: 0008a000 0008a000 00000000 e0000000
8b-00: 0008b000 0008b000 00000000 80000000
8b-01: 0008b000 0008b000 00000000 a0000000
8b-02: 0008b000 0008b000 00000000 c0000000
8b-03: 0008b000 0008b000 00000000 e0000000
8c-00: 0008c000 0008c000 00000000 80000000
8c-01: 0008c000 0008c000 00000000 a0000000
8c-02: 0008c000 0008c000 00000000 c0000000
8c-03: 0008c000 0008c000 00000000 e0000000
8d-00: 0008d000 0008d000 00000000 80000000
8d-01: 0008d000 0008d000 00000000 a0000000
8d-02: 0008d000 0008d000 00000000 c0000000
8d-03: 0008d000 0008d000 00000000 e0000000
8e-00: 0008e000 0008e000 00000000 80000000
8e-01: 0008e000 0008e000 00000000 a0000000
8e-02: 0008e000 0008e000 00000000 c0000000
8e-03: 0008e000 0008e000 00000000 e0000000
8f-00: 0008f000 0008f000 00000000 80000000
8f-01: 0008f000 0008f000 00000000 a0000000
8f-02: 0008f000 0008f000 00000000 c0000000
8f-03: 0008f000 0008f000 00000000 e0000000
90-00: 00090000 00090000 00000000 80000000
90-01: 00090000 00090000 00000000 a0000000
90-02: 00090000 00090000 00000000 c0000000
90-03: 00090000 00090000 00000000 e0000000
91-00: 00091000 00091000 00000000 80000000
91-01: 00091000 00091000 00000000 a0000000
91-02: 00091000 00091000 00000000 c0000000
91-03: 00091000 00091000 00000000 e0000000
92-00: 00092000 00092000 00000000 80000000
92-01: 00092000 00092000 00000000 a0000000
92-02: 00092000 00092000 00000000 c0000000
92-03: 00092000 00092000 00000000 e0000000
93-00: 00093000 00093000 00000000 80000000
93-01: 00093000 00093000 00000000 a0000000
93-02: 00093000 00093000 00000000 c0000000
93-03: 00093000 00093000 00000000 e0000000
94-00: 00094000 00094000 00000000 80000000
94-01: 00094000 00094000 00000000 a0000000
94-02: 00094000 00094000 00000000 c0000000
94-03: 00094000 00094000 00000000 e0000000
95-00: 00095000 00095000 00000000 80000000
95-01: 00095000 00095000 00000000 a0000000
95-02: 00095000 00095000 00000000 c0000000
95-03: 00095000 00095000 00000000 e0000000
96-00: 00096000 00096000 00000000 80000000
96-01: 00096000 00096000 00000000 a0000000
96-02: 00096000 00096000 00000000 c0000000
96-03: 00096000 00096000 00000000 e0000000
97-00: 00097000 00097000 00000000 80000000
97-01: 00097000 00097000 00000000 a0000000
97-02: 00097000 00097000 00000000 c0000000
97-03: 00097000 00097000 00000000 e0000000
98-00: 00098000 00098000 00000000 80000000
98-01: 00098000 00098000 00000000 a0000000
98-02: 00098000 00098000 00000000 c0000000
98-03: 00098000 00098000 00000000 e0000000
99-00: 00099000 00099000 00000000 80000000
99-01: 00099000 00099000 00000000 a0000000
99-02: 00099000 00099000 00000000 c0000000
99-03: 00099000 00099000 00000000 e0000000
9a-00: 0009a000 0009a000 00000000 80000000
9a-01: 0009a000 0009a000 00000000 a0000000
9a-02: 0009a000 0009a000 00000000 c0000000
9a-03: 0009a000 0009a000 00000000 e0000000
9b-00: 0009b000 0009b000 00000000 80000000
9b-01: 0009b000 0009b000 00000000 a0000000
9b-02: 0009b000 0009b000 00000000 c0000000
9b-03: 0009b000 0009b000 00000000 e0000000
9c-00: 0009c000 0009c000 00000000 80000000
9c-01: 0009c000 0009c000 00000000 a0000000
9c-02: 0009c000 0009c000 00000000 c0000000
9c-03: 0009c000 0009c000 00000000 e0000000
9d-00: 0009d000 0009d000 00000000 80000000
9d-01: 0009d000 0009d000 00000000 a0000000
9d-02: 0009d000 0009d000 00000000 c0000000
9d-03: 0009d000 0009d000 00000000 e0000000
9e-00: 0009e000 0009e000 00000000 80000000
9e-01: 0009e000 0009e000 00000000 a0000000
9e-02: 0009e000 0009e000 00000000 c0000000
9e-03: 0009e000 0009e000 00000000 e0000000
9f-00: 0009f000 0009f000 00000000 80000000
9f-01: 0009f000 0009f000 00000000 a0000000
9f-02: 0009f000 0009f000 00000000 c0000000
9f-03: 0009f000 0009f000 00000000 e0000000
a0-00: 000a0000 000a0000 00000000 80000000
a0-01: 000a0000 000a0000 00000000 a0000000
a0-02: 000a0000 000a0000 00000000 c0000000
a0-03: 000a0000 000a0000 00000000 e0000000
a1-00: 000a1000 000a1000 00000000 80000000
a1-01: 000a1000 000a1000 00000000 a0000000
a1-02: 000a1000 000a1000 00000000 c0000000
a1-03: 000a1000 000a1000 00000000 e0000000
a2-00: 000a2000 000a2000 00000000 80000000
a2-01: 000a2000 000a2000 00000000 a0000000
a2-02: 000a2000 000a2000 00000000 c0000000
a2-03: 000a2000 000a2000 00000000 e0000000
a3-00: 000a3000 000a3000 00000000 80000000
a3-01: 000a3000 000a3000 00000000 a0000000
a3-02: 000a3000 000a3000 00000000 c0000000
a3-03: 000a3000 000a3000 00000000 e0000000
a4-00: 000a4000 000a4000 00000000 80000000
a4-01: 000a4000 000a4000 00000000 a0000000
a4-02: 000a4000 000a4000 00000000 c0000000
a4-03: 000a4000 000a4000 00000000 e0000000
a5-00: 000a5000 000a5000 00000000 80000000
a5-01: 000a5000 000a5000 00000000 a0000000
a5-02: 000a5000 000a5000 00000000 c0000000
a5-03: 000a5000 000a5000 00000000 e0000000
a6-00: 000a6000 000a6000 00000000 80000000
a6-01: 000a6000 000a6000 00000000 a0000000
a6-02: 000a6000 000a6000 00000000 c0000000
a6-03: 000a6000 000a6000 00000000 e0000000
a7-00: 000a7000 000a7000 00000000 80000000
a7-01: 000a7000 000a7000 00000000 a0000000
a7-02: 000a7000 000a7000 00000000 c0000000
a7-03: 000a7000 000a7000 00000000 e0000000
a8-00: 000a8000 000a8000 00000000 80000000
a8-01: 000a8000 000a8000 00000000 a0000000
a8-02: 000a8000 000a8000 00000000 c0000000
a8-03: 000a8000 000a8000 00000000 e0000000
a9-00: 000a9000 000a9000 00000000 80000000
a9-01: 000a9000 000a9000 00000000 a0000000
a9-02: 000a9000 000a9000 00000000 c0000000
a9-03: 000a9000 000a9000 00000000 e0000000
aa-00: 000aa000 000aa000 00000000 80000000
aa-01: 000aa000 000aa000 00000000 a0000000
aa-02: 000aa000 000aa000 00000000 c0000000
aa-03: 000aa000 000aa000 00000000 e0000000
ab-00: 000ab000 000ab000 00000000 80000000
ab-01: 000ab000 000ab000 00000000 a0000000
ab-02: 000ab000 000ab000 00000000 c0000000
ab-03: 000ab000 000ab000 00000000 e0000000
ac-00: 000ac000 000ac000 00000000 80000000
ac-01: 000ac000 000ac000 00000000 a0000000
ac-02: 000ac000 000ac000 00000000 c0000000
ac-03: 000ac000 000ac000 00000000 e0000000
ad-00: 000ad000 000ad000 00000000 80000000
ad-01: 000ad000 000ad000 00000000 a0000000
ad-02: 000ad000 000ad000 00000000 c0000000
ad-03: 000ad000 000ad000 00000000 e0000000
ae-00: 000ae000 000ae000 00000000 80000000
ae-01: 000ae000 000ae000 00000000 a0000000
ae-02: 000ae000 000ae000 00000000 c0000000
ae-03: 000ae000 000ae000 00000000 e0000000
af-00: 000af000 000af000 00000000 80000000
af-01: 000af000 000af000 00000000 a0000000
af-02: 000af000 000af000 00000000 c0000000
af-03: 000af000 000af000 00000000 e0000000
b0-00: 000b0000 000b0000 00000000 80000000
b0-01: 000b0000 000b0000 00000000 a0000000
b0-02: 000b0000 000b0000 00000000 c0000000
b0-03: 000b0000 000b0000 00000000 e0000000
b1-00: 000b1000 000b1000 00000000 80000000
b1-01: 000b1000 000b1000 00000000 a0000000
b1-02: 000b1000 000b1000 00000000 c0000000
b1-03: 000b1000 000b1000 00000000 e0000000
b2-00: 000b2000 000b2000 00000000 80000000
b2-01: 000b2000 000b2000 00000000 a0000000
b2-02: 000b2000 000b2000 00000000 c0000000
b2-03: 000b2000 000b2000 00000000 e0000000
b3-00: 000b3000 000b3000 00000000 80000000
b3-01: 000b3000 000b3000 00000000 a0000000
b3-02: 000b3000 000b3000 00000000 c0000000
b3-03: 000b3000 000b3000 00000000 e0000000
b4-00: 000b4000 000b4000 00000000 80000000
b4-01: 000b4000 000b4000 00000000 a0000000
b4-02: 000b4000 000b4000 00000000 c0000000
b4-03: 000b4000 000b4000 00000000 e0000000
b5-00: 000b5000 000b5000 00000000 80000000
b5-01: 000b5000 000b5000 00000000 a0000000
b5-02: 000b5000 000b5000 00000000 c0000000
b5-03: 000b5000 000b5000 00000000 e0000000
b6-00: 000b6000 000b6000 00000000 80000000
b6-01: 000b6000 000b6000 00000000 a0000000
b6-02: 000b6000 000b6000 00000000 c0000000
b6-03: 000b6000 000b6000 00000000 e0000000
b7-00: 000b7000 000b7000 00000000 80000000
b7-01: 000b7000 000b7000 00000000 a0000000
b7-02: 000b7000 000b7000 00000000 c0000000
b7-03: 000b7000 000b7000 00000000 e0000000
b8-00: 000b8000 000b8000 00000000 80000000
b8-01: 000b8000 000b8000 00000000 a0000000
b8-02: 000b8000 000b8000 00000000 c0000000
b8-03: 000b8000 000b8000 00000000 e0000000
b9-00: 000b9000 000b9000 00000000 80000000
b9-01: 000b9000 000b9000 00000000 a0000000
b9-02: 000b9000 000b9000 00000000 c0000000
b9-03: 000b9000 000b9000 00000000 e0000000
ba-00: 000ba000 000ba000 00000000 80000000
ba-01: 000ba000 000ba000 00000000 a0000000
ba-02: 000ba000 000ba000 00000000 c0000000
ba-03: 000ba000 000ba000 00000000 e0000000
bb-00: 000bb000 000bb000 00000000 80000000
bb-01: 000bb000 000bb000 00000000 a0000000
bb-02: 000bb000 000bb000 00000000 c0000000
bb-03: 000bb000 000bb000 00000000 e0000000
bc-00: 000bc000 000bc000 00000000 80000000
bc-01: 000bc000 000bc000 00000000 a0000000
bc-02: 000bc000 000bc000 00000000 c0000000
bc-03: 000bc000 000bc000 00000000 e0000000
bd-00: 000bd000 000bd000 00000000 80000000
bd-01: 000bd000 000bd000 00000000 a0000000
bd-02: 000bd000 000bd000 00000000 c0000000
bd-03: 000bd000 000bd000 00000000 e0000000
be-00: 000be000 000be000 00000000 80000000
be-01: 000be000 000be000 00000000 a0000000
be-02: 000be000 000be000 00000000 c0000000
be-03: 000be000 000be000 00000000 e0000000
bf-00: 000bf000 000bf000 00000000 80000000
bf-01: 000bf000 000bf000 00000000 a0000000
bf-02: 000bf000 000bf000 00000000 c0000000
bf-03: 000bf000 000bf000 00000000 e0000000
c0-00: 000c0000 000c0000 00000000 80000000
c0-01: 000c0000 000c0000 00000000 a0000000
c0-02: 000c0000 000c0000 00000000 c0000000
c0-03: 000c0000 000c0000 00000000 e0000000
c1-00: 000c1000 000c1000 00000000 80000000
c1-01: 000c1000 000c1000 00000000 a0000000
c1-02: 000c1000 000c1000 00000000 c0000000
c1-03: 000c1000 000c1000 00000000 e0000000
c2-00: 000c2000 000c2000 00000000 80000000
c2-01: 000c2000 000c2000 00000000 a0000000
c2-02: 000c2000 000c2000 00000000 c0000000
c2-03: 000c2000 000c2000 00000000 e0000000
c3-00: 000c3000 000c3000 00000000 80000000
c3-01: 000c3000 000c3000 00000000 a0000000
c3-02: 000c3000 000c3000 00000000 c0000000
c3-03: 000c3000 000c3000 00000000 e0000000
c4-00: 000c4000 000c4000 00000000 80000000
c4-01: 000c4000 000c4000 00000000 a0000000
c4-02: 000c4000 000c4000 00000000 c0000000
c4-03: 000c4000 000c4000 00000000 e0000000
c5-00: 000c5000 000c5000 00000000 80000000
c5-01: 000c5000 000c5000 00000000 a0000000
c5-02: 000c5000 000c5000 00000000 c0000000
c5-03: 000c5000 000c5000 00000000 e0000000
c6-00: 000c6000 000c6000 00000000 80000000
c6-01: 000c6000 000c6000 00000000 a0000000
c6-02: 000c6000 000c6000 00000000 c0000000
c6-03: 000c6000 000c6000 00000000 e0000000
c7-00: 000c7000 000c7000 00000000 80000000
c7-01: 000c7000 000c7000 00000000 a0000000
c7-02: 000c7000 000c7000 00000000 c0000000
c7-03: 000c7000 000c7000 00000000 e0000000
c8-00: 000c8000 000c8000 00000000 80000000
c8-01: 000c8000 000c8000 00000000 a0000000
c8-02: 000c8000 000c8000 00000000 c0000000
c8-03: 000c8000 000c8000 00000000 e0000000
c9-00: 000c9000 000c9000 00000000 80000000
c9-01: 000c9000 000c9000 00000000 a0000000
c9-02: 000c9000 000c9000 00000000 c0000000
c9-03: 000c9000 000c9000 00000000 e0000000
ca-00: 000ca000 000ca000 00000000 80000000
ca-01: 000ca000 000ca000 00000000 a0000000
ca-02: 000ca000 000ca000 00000000 c0000000
ca-03: 000ca000 000ca000 00000000 e0000000
cb-00: 000cb000 000cb000 00000000 80000000
cb-01: 000cb000 000cb000 00000000 a0000000
cb-02: 000cb000 000cb000 00000000 c0000000
cb-03: 000cb000 000cb000 00000000 e0000000
cc-00: 000cc000 000cc000 00000000 80000000
cc-01: 000cc000 000cc000 00000000 a0000000
cc-02: 000cc000 000cc000 00000000 c0000000
cc-03: 000cc000 000cc000 00000000 e0000000
cd-00: 000cd000 000cd000 00000000 80000000
cd-01: 000cd000 000cd000 00000000 a0000000
cd-02: 000cd000 000cd000 00000000 c0000000
cd-03: 000cd000 000cd000 00000000 e0000000
ce-00: 000ce000 000ce000 00000000 80000000
ce-01: 000ce000 000ce000 00000000 a0000000
ce-02: 000ce000 000ce000 00000000 c0000000
ce-03: 000ce000 000ce000 00000000 e0000000
cf-00: 000cf000 000cf000 00000000 80000000
cf-01: 000cf000 000cf000 00000000 a0000000
cf-02: 000cf000 000cf000 00000000 c0000000
cf-03: 000cf000 000cf000 00000000 e0000000
d0-00: 000d0000 000d0000 00000000 80000000
d0-01: 000d0000 000d0000 00000000 a0000000
d0-02: 000d0000 000d0000 00000000 c0000000
d0-03: 000d0000 000d0000 00000000 e0000000
d1-00: 000d1000 000d1000 00000000 80000000
d1-01: 000d1000 000d1000 00000000 a0000000
d1-02: 000d1000 000d1000 00000000 c0000000
d1-03: 000d1000 000d1000 00000000 e0000000
d2-00: 000d2000 000d2000 00000000 80000000
d2-01: 000d2000 000d2000 00000000 a0000000
d2-02: 000d2000 000d2000 00000000 c0000000
d2-03: 000d2000 000d2000 00000000 e0000000
d3-00: 000d3000 000d3000 00000000 80000000
d3-01: 000d3000 000d3000 00000000 a0000000
d3-02: 000d3000 000d3000 00000000 c0000000
d3-03: 000d3000 000d3000 00000000 e0000000
d4-00: 000d4000 000d4000 00000000 80000000
d4-01: 000d4000 000d4000 00000000 a0000000
d4-02: 000d4000 000d4000 00000000 c0000000
d4-03: 000d4000 000d4000 00000000 e0000000
d5-00: 000d5000 000d5000 00000000 80000000
d5-01: 000d5000 000d5000 00000000 a0000000
d5-02: 000d5000 000d5000 00000000 c0000000
d5-03: 000d5000 000d5000 00000000 e0000000
d6-00: 000d6000 000d6000 00000000 80000000
d6-01: 000d6000 000d6000 00000000 a0000000
d6-02: 000d6000 000d6000 00000000 c0000000
d6-03: 000d6000 000d6000 00000000 e0000000
d7-00: 000d7000 000d7000 00000000 80000000
d7-01: 000d7000 000d7000 00000000 a0000000
d7-02: 000d7000 000d7000 00000000 c0000000
d7-03: 000d7000 000d7000 00000000 e0000000
d8-00: 000d8000 000d8000 00000000 80000000
d8-01: 000d8000 000d8000 00000000 a0000000
d8-02: 000d8000 000d8000 00000000 c0000000
d8-03: 000d8000 000d8000 00000000 e0000000
d9-00: 000d9000 000d9000 00000000 80000000
d9-01: 000d9000 000d9000 00000000 a0000000
d9-02: 000d9000 000d9000 00000000 c0000000
d9-03: 000d9000 000d9000 00000000 e0000000
da-00: 000da000 000da000 00000000 80000000
da-01: 000da000 000da000 00000000 a0000000
da-02: 000da000 000da000 00000000 c0000000
da-03: 000da000 000da000 00000000 e0000000
db-00: 000db000 000db000 00000000 80000000
db-01: 000db000 000db000 00000000 a0000000
db-02: 000db000 000db000 00000000 c0000000
db-03: 000db000 000db000 00000000 e0000000
dc-00: 000dc000 000dc000 00000000 80000000
dc-01: 000dc000 000dc000 00000000 a0000000
dc-02: 000dc000 000dc000 00000000 c0000000
dc-03: 000dc000 000dc000 00000000 e0000000
dd-00: 000dd000 000dd000 00000000 80000000
dd-01: 000dd000 000dd000 00000000 a0000000
dd-02: 000dd000 000dd000 00000000 c0000000
dd-03: 000dd000 000dd000 00000000 e0000000
de-00: 000de000 000de000 00000000 80000000
de-01: 000de000 000de000 00000000 a0000000
de-02: 000de000 000de000 00000000 c0000000
de-03: 000de000 000de000 00000000 e0000000
df-00: 000df000 000df000 00000000 80000000
df-01: 000df000 000df000 00000000 a0000000
df-02: 000df000 000df000 00000000 c0000000
df-03: 000df000 000df000 00000000 e0000000
e0-00: 000e0000 000e0000 00000000 80000000
e0-01: 000e0000 000e0000 00000000 a0000000
e0-02: 000e0000 000e0000 00000000 c0000000
e0-03: 000e0000 000e0000 00000000 e0000000
e1-00: 000e1000 000e1000 00000000 80000000
e1-01: 000e1000 000e1000 00000000 a0000000
e1-02: 000e1000 000e1000 00000000 c0000000
e1-03: 000e1000 000e1000 00000000 e0000000
e2-00: 000e2000 000e2000 00000000 80000000
e2-01: 000e2000 000e2000 00000000 a0000000
e2-02: 000e2000 000e2000 00000000 c0000000
e2-03: 000e2000 000e2000 00000000 e0000000
e3-00: 000e3000 000e3000 00000000 80000000
e3-01: 000e3000 000e3000 00000000 a0000000
e3-02: 000e3000 000e3000 00000000 c0000000
e3-03: 000e3000 000e3000 00000000 e0000000
e4-00: 000e4000 000e4000 00000000 80000000
e4-01: 000e4000 000e4000 00000000 a0000000
e4-02: 000e4000 000e4000 00000000 c0000000
e4-03: 000e4000 000e4000 00000000 e0000000
e5-00: 000e5000 000e5000 00000000 80000000
e5-01: 000e5000 000e5000 00000000 a0000000
e5-02: 000e5000 000e5000 00000000 c0000000
e5-03: 000e5000 000e5000 00000000 e0000000
e6-00: 000e6000 000e6000 00000000 80000000
e6-01: 000e6000 000e6000 00000000 a0000000
e6-02: 000e6000 000e6000 00000000 c0000000
e6-03: 000e6000 000e6000 00000000 e0000000
e7-00: 000e7000 000e7000 00000000 80000000
e7-01: 000e7000 000e7000 00000000 a0000000
e7-02: 000e7000 000e7000 00000000 c0000000
e7-03: 000e7000 000e7000 00000000 e0000000
e8-00: 000e8000 000e8000 00000000 80000000
e8-01: 000e8000 000e8000 00000000 a0000000
e8-02: 000e8000 000e8000 00000000 c0000000
e8-03: 000e8000 000e8000 00000000 e0000000
e9-00: 000e9000 000e9000 00000000 80000000
e9-01: 000e9000 000e9000 00000000 a0000000
e9-02: 000e9000 000e9000 00000000 c0000000
e9-03: 000e9000 000e9000 00000000 e0000000
ea-00: 000ea000 000ea000 00000000 80000000
ea-01: 000ea000 000ea000 00000000 a0000000
ea-02: 000ea000 000ea000 00000000 c0000000
ea-03: 000ea000 000ea000 00000000 e0000000
eb-00: 000eb000 000eb000 00000000 80000000
eb-01: 000eb000 000eb000 00000000 a0000000
eb-02: 000eb000 000eb000 00000000 c0000000
eb-03: 000eb000 000eb000 00000000 e0000000
ec-00: 000ec000 000ec000 00000000 80000000
ec-01: 000ec000 000ec000 00000000 a0000000
ec-02: 000ec000 000ec000 00000000 c0000000
ec-03: 000ec000 000ec000 00000000 e0000000
ed-00: 000ed000 000ed000 00000000 80000000
ed-01: 000ed000 000ed000 00000000 a0000000
ed-02: 000ed000 000ed000 00000000 c0000000
ed-03: 000ed000 000ed000 00000000 e0000000
ee-00: 000ee000 000ee000 00000000 80000000
ee-01: 000ee000 000ee000 00000000 a0000000
ee-02: 000ee000 000ee000 00000000 c0000000
ee-03: 000ee000 000ee000 00000000 e0000000
ef-00: 000ef000 000ef000 00000000 80000000
ef-01: 000ef000 000ef000 00000000 a0000000
ef-02: 000ef000 000ef000 00000000 c0000000
ef-03: 000ef000 000ef000 00000000 e0000000
f0-00: 000f0000 000f0000 00000000 80000000
f0-01: 000f0000 000f0000 00000000 a0000000
f0-02: 000f0000 000f0000 00000000 c0000000
f0-03: 000f0000 000f0000 00000000 e0000000
f1-00: 000f1000 000f1000 00000000 80000000
f1-01: 000f1000 000f1000 00000000 a0000000
f1-02: 000f1000 000f1000 00000000 c0000000
f1-03: 000f1000 000f1000 00000000 e0000000
f2-00: 000f2000 000f2000 00000000 80000000
f2-01: 000f2000 000f2000 00000000 a0000000
f2-02: 000f2000 000f2000 00000000 c0000000
f2-03: 000f2000 000f2000 00000000 e0000000
f3-00: 000f3000 000f3000 00000000 80000000
f3-01: 000f3000 000f3000 00000000 a0000000
f3-02: 000f3000 000f3000 00000000 c0000000
f3-03: 000f3000 000f3000 00000000 e0000000
f4-00: 000f4000 000f4000 00000000 80000000
f4-01: 000f4000 000f4000 00000000 a0000000
f4-02: 000f4000 000f4000 00000000 c0000000
f4-03: 000f4000 000f4000 00000000 e0000000
f5-00: 000f5000 000f5000 00000000 80000000
f5-01: 000f5000 000f5000 00000000 a0000000
f5-02: 000f5000 000f5000 00000000 c0000000
f5-03: 000f5000 000f5000 00000000 e0000000
f6-00: 000f6000 000f6000 00000000 80000000
f6-01: 000f6000 000f6000 00000000 a0000000
f6-02: 000f6000 000f6000 00000000 c0000000
f6-03: 000f6000 000f6000 00000000 e0000000
f7-00: 000f7000 000f7000 00000000 80000000
f7-01: 000f7000 000f7000 00000000 a0000000
f7-02: 000f7000 000f7000 00000000 c0000000
f7-03: 000f7000 000f7000 00000000 e0000000
f8-00: 000f8000 000f8000 00000000 80000000
f8-01: 000f8000 000f8000 00000000 a0000000
f8-02: 000f8000 000f8000 00000000 c0000000
f8-03: 000f8000 000f8000 00000000 e0000000
f9-00: 000f9000 000f9000 00000000 80000000
f9-01: 000f9000 000f9000 00000000 a0000000
f9-02: 000f9000 000f9000 00000000 c0000000
f9-03: 000f9000 000f9000 00000000 e0000000
fa-00: 000fa000 000fa000 00000000 80000000
fa-01: 000fa000 000fa000 00000000 a0000000
fa-02: 000fa000 000fa000 00000000 c0000000
fa-03: 000fa000 000fa000 00000000 e0000000
fb-00: 000fb000 000fb000 00000000 80000000
fb-01: 000fb000 000fb000 00000000 a0000000
fb-02: 000fb000 000fb000 00000000 c0000000
fb-03: 000fb000 000fb000 00000000 e0000000
fc-00: 000fc000 000fc000 00000000 80000000
fc-01: 000fc000 000fc000 00000000 a0000000
fc-02: 000fc000 000fc000 00000000 c0000000
fc-03: 000fc000 000fc000 00000000 e0000000
fd-00: 000fd000 000fd000 00000000 80000000
fd-01: 000fd000 000fd000 00000000 a0000000
fd-02: 000fd000 000fd000 00000000 c0000000
fd-03: 000fd000 000fd000 00000000 e0000000
fe-00: 000fe000 000fe000 00000000 80000000
fe-01: 000fe000 000fe000 00000000 a0000000
fe-02: 000fe000 000fe000 00000000 c0000000
fe-03: 000fe000 000fe000 00000000 e0000000
ff-00: 000ff000 000ff000 00000000 80000000
ff-01: 000ff000 000ff000 00000000 a0000000
ff-02: 000ff000 000ff000 00000000 c0000000
ff-03: 000ff000 000ff000 00000000 e0000000
__EOF__
}

function init_mmu()
{

	init_tlb

	# clear in case TLB ops caused parity errors
	pass ${DBGX} --asic spr.mcsr=0

	pcr=0x12345670
	pass ${DBGX} --asic spr.mmucr=0 spr.pid=0
	pass ${DBGX} --asic spr.sspcr=${pcr} spr.uspcr=${pcr} spr.ispcr=${pcr}

	# FIX ME restore TLBs

	# open 512K (8x 64K windows) for L2 cache @ 0K
	pass ${DBGX} --tlb --size 64K --way 0 --addr 0x00000000		\
		v=1 sxwr=7 uxwr=0 wimge=4 erpn=0x00 rpn=0x00000000
	pass ${DBGX} --tlb --size 64K --way 0 --addr 0x00010000		\
		v=1 sxwr=3 uxwr=0 wimge=4 erpn=0x00 rpn=0x00010000
	pass ${DBGX} --tlb --size 64K --way 0 --addr 0x00020000		\
		v=1 sxwr=3 uxwr=0 wimge=4 erpn=0x00 rpn=0x00020000
	pass ${DBGX} --tlb --size 64K --way 0 --addr 0x00030000		\
		v=1 sxwr=3 uxwr=0 wimge=4 erpn=0x00 rpn=0x00030000
	pass ${DBGX} --tlb --size 64K --way 0 --addr 0x00040000		\
		v=1 sxwr=3 uxwr=0 wimge=4 erpn=0x00 rpn=0x00040000
	pass ${DBGX} --tlb --size 64K --way 0 --addr 0x00050000		\
		v=1 sxwr=3 uxwr=0 wimge=4 erpn=0x00 rpn=0x00050000
	pass ${DBGX} --tlb --size 64K --way 0 --addr 0x00060000		\
		v=1 sxwr=3 uxwr=0 wimge=4 erpn=0x00 rpn=0x00060000
	pass ${DBGX} --tlb --size 64K --way 0 --addr 0x00070000		\
		v=1 sxwr=3 uxwr=0 wimge=4 erpn=0x00 rpn=0x00070000
}

function init_l1()
{
	pass ${DBGX} --cache icinv		# ici 0
	pass ${DBGX} --stuff 0x7c00038c		# dci 0
}

function init_l2()
{
	pass ${DBGX} --asic plb6.sgd1=0x10
	pass ${DBGX} --asic plb6.sgd2=0x20
	pass ${DBGX} --asic plb6.cr0=0x80000000

	pass ${DBGX} --asic l2plb6.plberp=0
	pass ${DBGX} --asic l2glb.cnfg1=0x21

	pass ${DBGX} --cache l2inv		# dci 2
	pass ${DBGX} --cache l20 --addr 0 --size 512K
}

function init_chip()
{
	init_sprs
	init_mmu
	init_l1
	init_l2
}

function usage()
{
	${CAT} <<EOF
Usage: ${0##*/} [OPTIONS]

OPTIONS
  -R,--read    Perform a read operation
  -E,--erase   Perform an erase operation
  -W,--write   Perform a write operation
  -P,--probe   Perform a probe operation
  -S,--speed   Perform a speed operation (requires speed in MHZ)
  -T,--test    Perform a test operation

  -s,--size    size of operation
  -o,--offset  Offset at which to perform operation
  -f,--file    File in which to store results of operation

  -tv,--target-verbose
               Set the verbosity level of the target
  -t,--host    Hostname of debugging probe
  -p,--port    Port # to use for probe

  -h,--help    Display this help message
  -v,--verbose Be verbose

EOF
}

function interpret_number()
{
	if [ "${1: -1}" == "M" ]; then
		echo $((1024*1024*${1:0:${#1}-1}))
	elif [ "${1: -1}" == "K" ]; then
		echo $((1024*${1:0:${#1}-1}))
	elif [ "${1: -1}" == "G" ]; then
		echo $((1024*1024*1024*${1:0:${#1}-1}))
	else
		echo $1
	fi
}

RWFLASH_MAGIC="0x5257464c"

# helpers
CONTROL_STRUCT_SIZE=$((7*4))
BLOCK_STRUCT_SIZE=$((6*4))

# must match boot/fsp2_ipl/ppcflash/ppcflash.h
MEMORY_SIZE=0x40000000		#   1G of memory
CODE_SIZE=0x0000C000		#  48K of code
STACK_SIZE=0x00002000		#   8K of stack
CONTROL_SIZE=0x00010000		#  64K of control
DATA_SIZE=($MEMORY_SIZE-$CODE_SIZE-$STACK_SIZE-$CONTROL_SIZE)

CODE_START=0x00000000		# memory map anchor
STACK_START=$(($CODE_START + $CODE_SIZE))
CONTROL_START=0x02000000	# 32MB
OP_START=$(($CONTROL_START + $CONTROL_STRUCT_SIZE))
DATA_START=$(($CONTROL_START + $CONTROL_SIZE))

# FIXME get from op_probe?
SECTOR_SIZE=$((64*1024))
TEMP_ADDR=$DATA_START
DATA_ADDR=$(($TEMP_ADDR+$SECTOR_SIZE))

RWFLASH_OP_PROBE=1
RWFLASH_OP_READ=2
RWFLASH_OP_WRITE=3
RWFLASH_OP_ERASE=4
RWFLASH_OP_DONE=5
RWFLASH_OP_SPEED=6
RWFLASH_OP_TEST=7

STATE_UNDEF="00000000"
STATE_IDLE="11111100"
STATE_RUNNING="22222200"
# Error states
ERROR="ffff"
STATE_EXCEPTION="ffff0000"
STATE_BADMAGIC="ffff1100"
STATE_FAILED="ffff2200"
STATE_COMPERR="ffff3300"
STATE_CRCERR="ffff4400"

function wait_for_idle()
{
	local state="0"
	local sleep_time=2
	local cnt=$((60/$sleep_time)) # 60 secs default

	while [ $cnt -gt 0 ]; do
		sleep $sleep_time
		${DBGX} --stop
		state=`${DBGX} --asic spr.usprg0`
		if [ "${state}" == "${STATE_IDLE}" ]; then
			return 0
		elif [ "${state:0:4}" == "${ERROR}" ]; then
			echo "Error: Target failed: ${state}"
			return 1
		fi
		${DBGX} --run
		cnt=$(($cnt-1))
	done

	${DBGX} --stop
	echo "Timeout waiting for idle state"

	return 1
}

function set_state()
{
	local state="0x$1"
	pass ${DBGX} --asic spr.usprg0=$state
}

function state_running()
{
	set_state $STATE_RUNNING
	pass ${DBGX} --run
	wait_for_idle
}

function setup_control()
{
	${DBGX} --reg mmio $(($CONTROL_START+0x00))=$RWFLASH_MAGIC
	# temp
	${DBGX} --reg mmio $(($CONTROL_START+0x04))=$TEMP_ADDR
	${DBGX} --reg mmio $(($CONTROL_START+0x08))=$SECTOR_SIZE
	# flags
	${DBGX} --reg mmio $(($CONTROL_START+0x0C))=0x00000002 # flags
	${DBGX} --reg mmio $(($CONTROL_START+0x10))=$T_VERB # verbose
	${DBGX} --reg mmio $(($CONTROL_START+0x14))=30 # timeout
	# ops
	${DBGX} --reg mmio $(($CONTROL_START+0x18))=$1
}

# Takes at least 1 parameter: address to write following parms
# optional parameters are the members of the rwflash_op_t structure
# TODO change first parameter to be index of op instead of absolute addr
function setup_op()
{
	local addr=$1; shift

	while [ $# -gt 0 ]; do
		${DBGX} --reg mmio $addr=$1
		addr=$(($addr+4))
		shift
	done
}

# for setting up read/erase operations
# Requires 3 parameters: operation, start address, size (in bytes)
function setup_ops()
{
	local op=$1
	local start=$2
	local sz=$3

	local b=$OP_START
	local flags=0x00000000
	local buf=$DATA_ADDR
	local crc=0
	local off=$OFFSET

	for i in `seq $start $SECTOR_SIZE $(($start+$sz-1))`; do
		setup_op $b $op $flags $buf $crc $off $SECTOR_SIZE
		b=$(($b + $BLOCK_STRUCT_SIZE))
		buf=$(($buf + $SECTOR_SIZE))
		off=$(($off + $SECTOR_SIZE))
	done
}

function op_probe()
{
	setup_control 1

	local b=$OP_START
	local flags=0x00000000
	local buf=$DATA_ADDR
	local crc=0
	local off=0
	local sz=3 # number of bytes in chip id

	setup_op $b $RWFLASH_OP_PROBE $flags $buf $crc $off $sz

	[ $VERBOSE -ge 1 ] && ${DBGX} -H -a $CONTROL_START \
		-s $(($CONTROL_STRUCT_SIZE+$BLOCK_STRUCT_SIZE*1))

	state_running

	${DBGX} -H -a $buf -s 0x40
}

function op_speed()
{
	op_probe
	setup_control 1

	local b=$OP_START
	local flags=0x00000000
	local buf=$DATA_ADDR
	local crc=0
	local off=0
	local sz=4 # value to set speed

	setup_op $b $RWFLASH_OP_SPEED $flags $buf $crc $off $sz

	pass ${DBGX} --reg mmio $buf=${SPEED}

	[ $VERBOSE -ge 1 ] && ${DBGX} -H -a $CONTROL_START \
		-s $(($CONTROL_STRUCT_SIZE+$BLOCK_STRUCT_SIZE*1))

	state_running
}

function op_erase()
{
	op_probe

	local num_blks=$(($SIZE / $SECTOR_SIZE))
	setup_control $num_blks
	setup_ops $RWFLASH_OP_ERASE $OFFSET $SIZE

	[ $VERBOSE -ge 1 ] && ${DBGX} -H -a $CONTROL_START \
		-s $(($CONTROL_STRUCT_SIZE+$BLOCK_STRUCT_SIZE))

	state_running
	echo "Erased flash: $OFFSET for $SIZE bytes"
}

function op_read()
{
	op_probe

	local num_blks=$(($SIZE / $SECTOR_SIZE))
	setup_control $num_blks
	setup_ops $RWFLASH_OP_READ $OFFSET $SIZE

	[ $VERBOSE -ge 1 ] && ${DBGX} -H -a $CONTROL_START \
		-s $(($CONTROL_STRUCT_SIZE+$BLOCK_STRUCT_SIZE*$num_blks))

	echo "Read flash: $OFFSET for $SIZE bytes"
	state_running

	echo "Validating read data..."
	rm -f $FILE.tmp

	b=$OP_START
	buf=$DATA_ADDR
	for i in `seq $num_blks`; do
		${DBGX} --read $FILE.$i -a $buf -s $SECTOR_SIZE
		# validate CRC of data
		exp=`${DBGX} --reg mmio $(($b+0xc))`
		act=`crc32 $FILE.$i`
		if [ "0x$exp" != "$act" ]; then
			echo "ERROR: CRC mismatch act:$act exp:$exp"
			exit 1
		fi

		cat $FILE.$i >> $FILE.tmp; rm $FILE.$i
		buf=$(($buf + $SECTOR_SIZE))
		b=$(($b + $BLOCK_STRUCT_SIZE))
	done

	mv $FILE.tmp $FILE
	echo "Success"
}

function op_write()
{
	op_probe

	local tmpdir=`mktemp -d`
	local num_blks=$(($SIZE / $SECTOR_SIZE))
	setup_control $num_blks

	local b=$OP_START
	local flags=0x00000000
	local buf=$DATA_ADDR
	local off=$OFFSET
	local skip=0
	for i in `seq $OFFSET $((64*1024)) $(($OFFSET+$SIZE-1))`; do
		tmp="$tmpdir/block.$i"
		# generate CRC of data
		dd if=$FILE of=$tmp skip=$skip bs=1 count=$SECTOR_SIZE
		crc=`crc32 $tmp`
		setup_op $b $RWFLASH_OP_WRITE $flags $buf $crc $off $SECTOR_SIZE

		${DBGX} --write $tmp --addr $buf --size $SECTOR_SIZE

		# setup vars for next pass
		b=$(($b + $BLOCK_STRUCT_SIZE))
		buf=$(($buf + $SECTOR_SIZE))
		off=$(($off + $SECTOR_SIZE))
		skip=$(($skip + $SECTOR_SIZE))
	done

	rm -r $tmpdir

	[ $VERBOSE -ge 1 ] && ${DBGX} -H -a $CONTROL_START \
		-s $(($CONTROL_STRUCT_SIZE+$BLOCK_STRUCT_SIZE*$num_blks))

	state_running
	echo "Write flash: $OFFSET for $SIZE bytes"
}

function validate_args()
{
	if [ "$OP" == "op_read" -o "$OP" == "op_write" ]; then
		if [ -z ${OFFSET:-} ]; then
			echo "Error: Must specify --offset"; exit 1
		fi

		if [ -z ${SIZE:-} ]; then
			echo "Error: Must specify --size"; exit 1
		fi

		if [ -z ${FILE:-} ]; then
			echo "Error: Must specify --file"; exit 1
		fi

		if [ -z ${SIZE:-} ]; then
			echo "Error: Must specify --size"; exit 1
		fi
	elif [ "$OP" == "op_erase" -o "$OP" == "op_test" ]; then
		if [ -z ${OFFSET:-} ]; then
			echo "Error: Must specify --offset"; exit 1
		fi
		if [ -z ${SIZE:-} ]; then
			echo "Error: Must specify --size"; exit 1
		fi
	elif [ "$OP" == "error" ]; then
		echo "Error: Must specify an operation"; exit 1
	fi

	return 0
}

function op_test()
{
	local tmpdir=`mktemp -d`
	local tmp="$tmpdir/block"

	op_probe

	local num_blks=$(($SIZE / $SECTOR_SIZE))
	setup_control $num_blks

	local b=$OP_START
	local flags=0x00000000
	local buf=$DATA_ADDR
	local off=$OFFSET
	local sz=$SECTOR_SIZE
	local off=0

	dd if=/dev/urandom of=$tmp bs=1 count=$SECTOR_SIZE
	local crc=`crc32 $tmp`

	for i in `seq $OFFSET $SECTOR_SIZE $(($OFFSET+$SIZE-1))`; do
		setup_op $b $RWFLASH_OP_TEST $flags $buf $crc $off $sz
		${DBGX} --write $tmp --addr $buf --size $SECTOR_SIZE

		# setup vars for next pass
		b=$(($b + $BLOCK_STRUCT_SIZE))
		buf=$(($buf + $SECTOR_SIZE))
		off=$(($off + $SECTOR_SIZE))
	done

	[ $VERBOSE -ge 1 ] && ${DBGX} -H -a $CONTROL_START \
		-s $(($CONTROL_STRUCT_SIZE+$BLOCK_STRUCT_SIZE*1))

	state_running

	# FIXME get results?
	rm -r $tmpdir
	echo "Test flash: $OFFSET for $SIZE bytes"
}


function start_bin()
{
	set_state $STATE_UNDEF
	pass ${DBGX} --run
	wait_for_idle
}

function main()
{
	reset_probe
	reset_chip
	init_chip
	upload_bin
	start_bin
	$OP
	${DBGX} --run
}

## Parse options
while [ $# -gt 0 ]; do
	case $1 in
		-E | --erase)
			OP="op_erase";;
		-R | --read)
			OP="op_read";;
		-W | --write)
			OP="op_write";;
		-P | --probe)
			OP="op_probe";;
		-S | --speed)
			OP="op_speed"; shift; SPEED="$1";;
		-T | --test)
			OP="op_test";;

		-tv | --target-verbose)
			shift; T_VERB="$1";;

		-o | --offset)
			shift; OFFSET=`interpret_number $1`;;
		-s | --size)
			shift; SIZE=`interpret_number $1`;;
		-f | --file)
			shift; FILE="$1";;

		-t | --host)
			shift; DBGX="${DBGX} --host $1";;
		-p | --port)
			shift; DBGX="${DBGX} --port $1";;

		-h | --help)
			usage; exit 0;;
		-v | --verbose)
			VERBOSE=1; set -x;;
		-*)
			echo "Unknown option $1"; usage; exit 1;;
	esac
	shift
done

validate_args

#############################################################################
##### DO NOT EDIT BELOW THIS LINE           DO NOT EDIT BELOW THIS LINE #####
#############################################################################

function upload_bin()
{
${BASE64} -d <<__EOF__ | ${ZCAT} | pass ${DBGX} --addr 0 --write - --size 35380
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
__EOF__
}

main
